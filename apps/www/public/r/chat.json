{
  "name": "chat",
  "type": "registry:ui",
  "registryDependencies": [
    "button",
    "http://localhost:3333/r/chat-message.json",
    "http://localhost:3333/r/message-input.json",
    "http://localhost:3333/r/message-list.json",
    "http://localhost:3333/r/prompt-suggestions.json",
    "http://localhost:3333/r/use-auto-scroll.json"
  ],
  "files": [
    {
      "path": "ui/chat.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { ArrowDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { useAutoScroll } from \"@/registry/default/hooks/use-auto-scroll\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport { type Message } from \"@/registry/default/ui/chat-message\"\nimport { MessageInput } from \"@/registry/default/ui/message-input\"\nimport { MessageList } from \"@/registry/default/ui/message-list\"\nimport { PromptSuggestions } from \"@/registry/default/ui/prompt-suggestions\"\n\n// TODO: expose subcomponent props\ninterface ChatPropsBase {\n  handleSubmit: (\n    event?: { preventDefault?: () => void },\n    options?: { experimental_attachments?: FileList }\n  ) => void\n  messages: Array<Message>\n  className?: string\n  input: string\n  handleInputChange: React.ChangeEventHandler<HTMLTextAreaElement>\n  isLoading?: boolean\n  isGenerating: boolean\n  stop?: () => void\n}\n\ninterface ChatPropsWithoutSuggestions extends ChatPropsBase {\n  append?: never\n  suggestions?: never\n}\n\ninterface ChatPropsWithSuggestions extends ChatPropsBase {\n  append: (message: { role: \"user\"; content: string }) => void\n  suggestions: string[]\n}\n\ntype ChatProps = ChatPropsWithoutSuggestions | ChatPropsWithSuggestions\n\nexport const Chat: React.FC<ChatProps> = ({\n  messages,\n  handleSubmit,\n  input,\n  handleInputChange,\n  className,\n  isLoading = false,\n  append,\n  suggestions,\n  stop,\n  isGenerating,\n}) => {\n  const [files, setFiles] = useState<File[] | null>(null)\n  const { containerRef, scrollToBottom, handleScroll, shouldAutoScroll } =\n    useAutoScroll([messages])\n\n  const onSubmit = (event: React.FormEvent) => {\n    if (isGenerating || isLoading) {\n      event.preventDefault()\n      return\n    }\n\n    if (!files) {\n      handleSubmit(event)\n      return\n    }\n\n    const fileList = createFileList(files)\n    handleSubmit(event, { experimental_attachments: fileList })\n    setFiles(null)\n  }\n\n  return (\n    <div className={cn(\"grid w-full grid-rows-[1fr_auto]\", className)}>\n      {messages.length === 0 && append && suggestions ? (\n        <PromptSuggestions append={append} suggestions={suggestions} />\n      ) : null}\n\n      {messages.length > 0 ? (\n        <div\n          className=\"relative overflow-y-auto pb-4\"\n          ref={containerRef}\n          onScroll={handleScroll}\n        >\n          <MessageList messages={messages} isLoading={isLoading} />\n          {!shouldAutoScroll && (\n            <div className=\"sticky bottom-0 left-0 flex w-full justify-end\">\n              <Button\n                onClick={scrollToBottom}\n                className=\"animate-in fade-in-0 slide-in-from-bottom-1 h-8 w-8 rounded-full ease-in-out\"\n                size=\"icon\"\n                variant=\"ghost\"\n              >\n                <ArrowDown className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      ) : null}\n\n      <form onSubmit={onSubmit} className=\"mt-auto flex w-full gap-2\">\n        <MessageInput\n          value={input}\n          onChange={handleInputChange}\n          allowAttachments\n          files={files}\n          setFiles={setFiles}\n          stop={stop}\n          isGenerating={isGenerating}\n        />\n      </form>\n    </div>\n  )\n}\nChat.displayName = \"Chat\"\n\nfunction createFileList(files: File[] | FileList): FileList {\n  const dataTransfer = new DataTransfer()\n  for (const file of Array.from(files)) {\n    dataTransfer.items.add(file)\n  }\n  return dataTransfer.files\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}