{
  "name": "markdown-renderer",
  "type": "registry:ui",
  "dependencies": [
    "react-markdown",
    "remark-gfm"
  ],
  "files": [
    {
      "path": "ui/markdown-renderer.tsx",
      "content": "import Markdown from \"react-markdown\"\nimport remarkGfm from \"remark-gfm\"\n\ninterface MarkdownRendererProps {\n  children: string\n}\n\nexport function MarkdownRenderer({ children }: MarkdownRendererProps) {\n  return (\n    <Markdown remarkPlugins={[remarkGfm]} components={COMPONENTS}>\n      {children}\n    </Markdown>\n  )\n}\n\nconst COMPONENTS = {\n  h1: withClass(\"h1\", \"text-2xl font-semibold\"),\n  h2: withClass(\"h2\", \"font-semibold text-xl\"),\n  h3: withClass(\"h3\", \"font-semibold text-lg\"),\n  h4: withClass(\"h4\", \"font-semibold text-base\"),\n  h5: withClass(\"h5\", \"font-medium\"),\n  strong: withClass(\"strong\", \"font-semibold\"),\n  a: withClass(\"a\", \"text-primary underline underline-offset-2\"),\n  blockquote: withClass(\"blockquote\", \"border-l-2 border-primary pl-4\"),\n  code: ({ children, className, node, ...rest }: any) => {\n    return (\n      <code\n        className=\"font-mono [:not(pre)>&]:rounded-md [:not(pre)>&]:bg-background/50 [:not(pre)>&]:px-1 [:not(pre)>&]:py-0.5\"\n        {...rest}\n      >\n        {children}\n      </code>\n    )\n  },\n  ol: withClass(\"ol\", \"list-decimal space-y-2 pl-6\"),\n  ul: withClass(\"ul\", \"list-disc space-y-2 pl-6\"),\n  li: withClass(\"li\", \"my-1.5\"),\n  table: withClass(\n    \"table\",\n    \"w-full border-collapse overflow-y-auto rounded-md border border-foreground/20\"\n  ),\n  th: withClass(\n    \"th\",\n    \"border border-foreground/20 px-4 py-2 text-left font-bold [&[align=center]]:text-center [&[align=right]]:text-right\"\n  ),\n  td: withClass(\n    \"td\",\n    \"border border-foreground/20 px-4 py-2 text-left [&[align=center]]:text-center [&[align=right]]:text-right\"\n  ),\n  tr: withClass(\"tr\", \"m-0 border-t p-0 even:bg-muted\"),\n  p: withClass(\"p\", \"whitespace-pre-wrap\"),\n  hr: withClass(\"hr\", \"border-foreground/20\"),\n  pre: withClass(\"pre\", \"rounded-md bg-background/50 p-4 font-mono text-sm\"),\n}\n\nfunction withClass(Tag: keyof JSX.IntrinsicElements, classes: string) {\n  const Component = ({ node, ...props }: any) => (\n    <Tag className={classes} {...props} />\n  )\n  Component.displayName = Tag\n  return Component\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}